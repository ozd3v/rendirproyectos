<?xml version="1.0" encoding="UTF-8"?>
<beans  xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
        xmlns:security="http://www.springframework.org/schema/security"
        xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
			http://www.springframework.org/schema/security 
			http://www.springframework.org/schema/security/spring-security-3.1.xsd">

    <!-- enable support for Expression-based annotations in Spring Security secured-annotations="enabled"  -->
    <security:global-method-security pre-post-annotations="enabled" secured-annotations="enabled" />
    
    <!--
    <security:http auto-config="true" use-expressions="true" access-denied-page="/accessdenied" >
        
        <security:form-login />
	
        <security:logout />
	
    </security:http>
    -->
    
    	<security:http auto-config="true" use-expressions="true" access-denied-page="/accessdenied">
		<security:intercept-url pattern="/welcome*" />
		<security:form-login login-page="/login" default-target-url="/welcome"
			authentication-failure-url="/loginfailed" />
		<security:logout logout-success-url="/logout" />
                <security:remember-me data-source-ref="dataSource" token-validity-seconds="864000" />
	</security:http>
        <!--
         <bean id="dataSource" 
        class="org.springframework.jdbc.datasource.DriverManagerDataSource">
                        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
                        <property name="url" value="jdbc:mysql://jira.idev.cl:3306/test" />
                        <property name="username" value="root" />
                        <property name="password" value="" />
           </bean>          
                    -->  
         <bean id="dataSource" 
        class="org.springframework.jdbc.datasource.DriverManagerDataSource">
                        <property name="driverClassName" value="org.postgresql.Driver" />
                        <property name="url" value="jdbc:postgresql://jira.idev.cl:5432/secframework" />
                        <property name="username" value="secuser" />
                        <property name="password" value="secuser" />
           </bean>                     
            <security:authentication-manager>
                        <security:authentication-provider>
                                    <security:jdbc-user-service data-source-ref="dataSource" 
                           users-by-username-query="
                              select username,password, enabled 
                              from sec.users where username=?" 
                           authorities-by-username-query="
                              select u.username, ur.authority from sec.users u, sec.authorities ur 
                              where u.username = ur.username and u.username=?" 
                             />
                                     <security:password-encoder ref="passwordEncoder"/>
                        </security:authentication-provider>
            </security:authentication-manager>           
   
    <!-- Declare an authentication-manager to use a custom userDetailsService -->
    <!--
    <security:authentication-manager>
        <security:authentication-provider user-service-ref="userDetailsService">
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>
	    -->
        
    <!-- Use a Md5 encoder since the user's passwords are stored as Md5 in the database -->
    <bean class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" id="passwordEncoder"/>
	 <!-- An in-memory list of users. No need to access an external database layer.
		    See Spring Security 3.1 Reference 5.2.1 In-Memory Authentication -->
	 <!-- john's password is admin, while jane;s password is user  -->
         <!--
    <security:user-service id="userDetailsService">
        <security:user name="admin" password="21232f297a57a5a743894a0e4a801fc3" authorities="ROLE_USER, ROLE_ADMIN" />
        <security:user name="user" password="ee11cbb19052e40b07aac0ca060c23ee" authorities="ROLE_USER" />
    </security:user-service>
    -->
    
</beans>